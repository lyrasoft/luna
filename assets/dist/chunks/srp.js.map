{"version":3,"file":"srp.js","sources":["../../src/modules/srp.ts"],"sourcesContent":["import { module, useHttpClient, useUniDirective } from '@windwalker-io/unicorn-next';\nimport type { SRPOptions } from '../types/srp';\n\nconst defaultOptions: SRPOptions = {\n  identitySelector: '[data-input-identity]',\n  passwordSelector: '[data-input-password]',\n  prime: undefined,\n  generator: undefined,\n  key: undefined,\n  size: 256,\n  hasher: 'sha256'\n};\n\nclass SRPRegistration {\n  identityInput: HTMLInputElement | null;\n  passwordInput: HTMLInputElement | null;\n  // saltInput: HTMLInputElement;\n  // verifierInput: HTMLInputElement;\n  options: SRPOptions;\n\n  public submitting = false;\n  public disabledInputs: HTMLInputElement[] = [];\n\n  constructor(public el: HTMLFormElement, options: Partial<SRPOptions> = {}) {\n    this.options = Object.assign({}, defaultOptions, options);\n    this.identityInput = this.el.querySelector(this.options.identitySelector);\n    this.passwordInput = this.el.querySelector(this.options.passwordSelector);\n\n    this.init();\n  }\n\n  init() {\n    if (!this.identityInput || !this.passwordInput) {\n      throw new Error('Identity or password input not found.');\n    }\n\n    this.el.addEventListener('submit', async (e) => {\n      if (!this.submitting) {\n        e.stopPropagation();\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        await this.register();\n\n        this.disablePasswords();\n\n        this.submitting = true;\n\n        this.el.requestSubmit();\n\n        return;\n      }\n    });\n\n    this.el.addEventListener('invalid', () => {\n      this.release();\n    }, true);\n  }\n\n  release() {\n    this.submitting = false;\n\n    for (const disabledInput of this.disabledInputs) {\n      disabledInput.disabled = false;\n    }\n  }\n\n  getPasswordInputs() {\n    return [\n      this.passwordInput,\n      ...this.el.querySelectorAll<HTMLInputElement>('[data-srp-override]')\n    ];\n  }\n\n  disablePasswords() {\n    this.disabledInputs = [];\n\n    for (const input of this.getPasswordInputs()) {\n      if (input && input.value && !input.disabled) {\n        input.disabled = true;\n\n        this.disabledInputs.push(input);\n\n        setTimeout(() => {\n          input.disabled = false;\n        }, 1000);\n      }\n    }\n  }\n\n  createClient(): InstanceType<typeof SRPClient> {\n    const client = SRPClient.create(\n      this.options.prime,\n      this.options.generator,\n      this.options.key,\n    );\n\n    client.setSize(this.options.size);\n    client.setHasher(this.options?.hasher);\n\n    return client;\n  }\n\n  async register() {\n    const client = this.createClient();\n\n    const identity = this.identityInput?.value;\n    const password = this.passwordInput?.value;\n\n    if (!identity || !password) {\n      this.getHiddenInput('srp[salt]').value = '';\n      this.getHiddenInput('srp[verifier]').value = '';\n      return;\n    }\n\n    let { salt, verifier } = await client.register(identity, password);\n\n    const saltInput = this.getHiddenInput('srp[salt]');\n    saltInput.value = salt.toString(16);\n\n    const verifierInput = this.getHiddenInput('srp[verifier]');\n    verifierInput.value = verifier.toString(16);\n  }\n\n  getHiddenInput(name: string) {\n    return this.el.querySelector<HTMLInputElement>(`[name=\"${name}\"]`)\n      || this.createHiddenInput(name);\n  }\n\n  createHiddenInput(name: string) {\n    const input = document.createElement('input');\n\n    input.type = 'hidden';\n    input.name = name;\n\n    this.el.appendChild(input);\n\n    return input;\n  }\n}\n\nclass SRPLogin {\n  identityInput: HTMLInputElement | null;\n  passwordInput: HTMLInputElement | null;\n  // saltInput: HTMLInputElement | null;\n  // verifierInput: HTMLInputElement | null;\n\n  public fallback = false;\n  public submitting = false;\n  public submitter: HTMLButtonElement | null = null;\n\n  public disabledInputs: HTMLInputElement[] = [];\n  options: SRPOptions;\n\n  constructor(public el: HTMLFormElement, options: Partial<SRPOptions> = {}) {\n    this.options = Object.assign({}, defaultOptions, options);\n\n    this.identityInput = this.el.querySelector(this.options.identitySelector);\n    this.passwordInput = this.el.querySelector(this.options.passwordSelector);\n\n    this.init();\n  }\n\n  init() {\n    if (!this.identityInput || !this.passwordInput) {\n      throw new Error('Identity or password input not found.');\n    }\n\n    this.el.addEventListener('submit', async (e) => {\n      this.submitter = e.submitter as HTMLButtonElement;\n\n      if (!this.submitting) {\n        e.stopPropagation();\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        try {\n          await this.auth();\n        } catch (e) {\n          console.warn(e);\n        }\n\n        if (!this.fallback) {\n          this.disablePasswords();\n        }\n\n        this.submitting = true;\n\n        this.el.requestSubmit();\n\n        return;\n      }\n    });\n\n    this.el.addEventListener('invalid', () => {\n      this.release();\n    }, true);\n  }\n\n  release() {\n    if (this.submitter) {\n      this.submitter.disabled = false;\n    }\n\n    this.submitting = false;\n    this.fallback = false;\n    this.getHiddenInput('srp[M2]').value = '';\n\n    for (const disabledInput of this.disabledInputs) {\n      disabledInput.disabled = false;\n    }\n  }\n\n  async auth() {\n    if (!this.identityInput?.value || !this.passwordInput?.value) {\n      return;\n    }\n\n    if (this.submitter) {\n      this.submitter.disabled = true;\n    }\n\n    const identity = this.identityInput.value;\n    const password = this.passwordInput.value;\n\n    const client = this.createClient();\n    const { get, post } = await useHttpClient();\n\n    // Challenge\n    const res = await get(\n      '@auth_ajax/srpChallenge{?identity}',\n      {\n        vars: {\n          identity\n        }\n      }\n    );\n\n    const r = res.data.data;\n\n    if (r == null) {\n      return;\n    }\n\n    this.fallback = !!r.fallback;\n    this.getHiddenInput('srp[fallback]').value = this.fallback ? '1' : '0';\n\n    if (this.fallback) {\n      return;\n    }\n\n    let { salt, B } = r;\n\n    // Step1\n    salt = hexToBigint(salt);\n    B = hexToBigint(B);\n\n    // Step 1\n    const a = await client.generateRandomSecret();\n    const A = await client.generatePublic(a);\n    const x = await client.generatePasswordHash(salt, identity, password);\n\n    // Step 2\n    const u = await client.generateCommonSecret(A, B);\n    const S = await client.generatePreMasterSecret(a, B, x, u);\n    const K = await client.hash(S);\n    const M1 = await client.generateClientSessionProof(identity, salt, A, B, K);\n\n    const res2 = await post(\n      '@auth_ajax/srpAuthenticate',\n      {\n        identity,\n        A: A.toString(16),\n        M1: M1.toString(16)\n      }\n    );\n\n    const { proof } = res2.data.data;\n\n    const M2 = await client.generateServerSessionProof(A, M1, K);\n\n    if (M2 !== hexToBigint(proof)) {\n      // Just return\n      return;\n    }\n\n    this.getHiddenInput('srp[M2]').value = M2.toString(16);\n  }\n\n  getPasswordInputs() {\n    return [\n      this.passwordInput,\n      ...this.el.querySelectorAll<HTMLInputElement>('[data-srp-override]')\n    ];\n  }\n\n  disablePasswords() {\n    this.disabledInputs = [];\n\n    for (const input of this.getPasswordInputs()) {\n      if (input && input.value && !input.disabled) {\n        input.disabled = true;\n\n        this.disabledInputs.push(input);\n\n        setTimeout(() => {\n          input.disabled = false;\n        }, 1000);\n      }\n    }\n  }\n\n  createClient(): InstanceType<typeof SRPClient> {\n    const client = SRPClient.create(\n      this.options.prime,\n      this.options.generator,\n      this.options.key,\n    );\n\n    client.setSize(this.options.size);\n    client.setHasher(this.options.hasher);\n\n    return client;\n  }\n\n  getHiddenInput(name: string) {\n    return this.el.querySelector<HTMLInputElement>(`[name=\"${name}\"]`)\n      || this.createHiddenInput(name);\n  }\n\n  createHiddenInput(name: string) {\n    const input = document.createElement('input');\n\n    input.type = 'hidden';\n    input.name = name;\n\n    this.el.appendChild(input);\n\n    return input;\n  }\n}\n\nfunction hexToBigint(hex: string) {\n  return BigInt(`0x${hex}`);\n}\n\nuseUniDirective('srp-registration', {\n  mounted(el, { value }) {\n    const options = JSON.parse(value);\n    module(\n      el,\n      'srp.registration',\n      (el) => new SRPRegistration(el as HTMLFormElement, options)\n    );\n  }\n});\n\nuseUniDirective('srp-login', {\n  mounted(el, { value }) {\n    const options = JSON.parse(value);\n    module(\n      el,\n      'srp.login',\n      (el) => new SRPLogin(el as HTMLFormElement, options)\n    );\n  }\n});\n"],"names":["e","el"],"mappings":";AAGA,MAAM,iBAA6B;AAAA,EACjC,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,OAAO;AAAA,EACP,WAAW;AAAA,EACX,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AACV;AAEA,MAAM,gBAAgB;AAAA,EAUpB,YAAmB,IAAqB,UAA+B,IAAI;AAAxD,SAAA,KAAA;AACjB,SAAK,UAAU,OAAO,OAAO,CAAA,GAAI,gBAAgB,OAAO;AACxD,SAAK,gBAAgB,KAAK,GAAG,cAAc,KAAK,QAAQ,gBAAgB;AACxE,SAAK,gBAAgB,KAAK,GAAG,cAAc,KAAK,QAAQ,gBAAgB;AAExE,SAAK,KAAA;AAAA,EACP;AAAA,EAfA;AAAA,EACA;AAAA;AAAA;AAAA,EAGA;AAAA,EAEO,aAAa;AAAA,EACb,iBAAqC,CAAA;AAAA,EAU5C,OAAO;AACL,QAAI,CAAC,KAAK,iBAAiB,CAAC,KAAK,eAAe;AAC9C,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AAEA,SAAK,GAAG,iBAAiB,UAAU,OAAO,MAAM;AAC9C,UAAI,CAAC,KAAK,YAAY;AACpB,UAAE,gBAAA;AACF,UAAE,eAAA;AACF,UAAE,yBAAA;AAEF,cAAM,KAAK,SAAA;AAEX,aAAK,iBAAA;AAEL,aAAK,aAAa;AAElB,aAAK,GAAG,cAAA;AAER;AAAA,MACF;AAAA,IACF,CAAC;AAED,SAAK,GAAG,iBAAiB,WAAW,MAAM;AACxC,WAAK,QAAA;AAAA,IACP,GAAG,IAAI;AAAA,EACT;AAAA,EAEA,UAAU;AACR,SAAK,aAAa;AAElB,eAAW,iBAAiB,KAAK,gBAAgB;AAC/C,oBAAc,WAAW;AAAA,IAC3B;AAAA,EACF;AAAA,EAEA,oBAAoB;AAClB,WAAO;AAAA,MACL,KAAK;AAAA,MACL,GAAG,KAAK,GAAG,iBAAmC,qBAAqB;AAAA,IAAA;AAAA,EAEvE;AAAA,EAEA,mBAAmB;AACjB,SAAK,iBAAiB,CAAA;AAEtB,eAAW,SAAS,KAAK,qBAAqB;AAC5C,UAAI,SAAS,MAAM,SAAS,CAAC,MAAM,UAAU;AAC3C,cAAM,WAAW;AAEjB,aAAK,eAAe,KAAK,KAAK;AAE9B,mBAAW,MAAM;AACf,gBAAM,WAAW;AAAA,QACnB,GAAG,GAAI;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA,EAEA,eAA+C;AAC7C,UAAM,SAAS,UAAU;AAAA,MACvB,KAAK,QAAQ;AAAA,MACb,KAAK,QAAQ;AAAA,MACb,KAAK,QAAQ;AAAA,IAAA;AAGf,WAAO,QAAQ,KAAK,QAAQ,IAAI;AAChC,WAAO,UAAU,KAAK,SAAS,MAAM;AAErC,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,WAAW;AACf,UAAM,SAAS,KAAK,aAAA;AAEpB,UAAM,WAAW,KAAK,eAAe;AACrC,UAAM,WAAW,KAAK,eAAe;AAErC,QAAI,CAAC,YAAY,CAAC,UAAU;AAC1B,WAAK,eAAe,WAAW,EAAE,QAAQ;AACzC,WAAK,eAAe,eAAe,EAAE,QAAQ;AAC7C;AAAA,IACF;AAEA,QAAI,EAAE,MAAM,SAAA,IAAa,MAAM,OAAO,SAAS,UAAU,QAAQ;AAEjE,UAAM,YAAY,KAAK,eAAe,WAAW;AACjD,cAAU,QAAQ,KAAK,SAAS,EAAE;AAElC,UAAM,gBAAgB,KAAK,eAAe,eAAe;AACzD,kBAAc,QAAQ,SAAS,SAAS,EAAE;AAAA,EAC5C;AAAA,EAEA,eAAe,MAAc;AAC3B,WAAO,KAAK,GAAG,cAAgC,UAAU,IAAI,IAAI,KAC5D,KAAK,kBAAkB,IAAI;AAAA,EAClC;AAAA,EAEA,kBAAkB,MAAc;AAC9B,UAAM,QAAQ,SAAS,cAAc,OAAO;AAE5C,UAAM,OAAO;AACb,UAAM,OAAO;AAEb,SAAK,GAAG,YAAY,KAAK;AAEzB,WAAO;AAAA,EACT;AACF;AAEA,MAAM,SAAS;AAAA,EAab,YAAmB,IAAqB,UAA+B,IAAI;AAAxD,SAAA,KAAA;AACjB,SAAK,UAAU,OAAO,OAAO,CAAA,GAAI,gBAAgB,OAAO;AAExD,SAAK,gBAAgB,KAAK,GAAG,cAAc,KAAK,QAAQ,gBAAgB;AACxE,SAAK,gBAAgB,KAAK,GAAG,cAAc,KAAK,QAAQ,gBAAgB;AAExE,SAAK,KAAA;AAAA,EACP;AAAA,EAnBA;AAAA,EACA;AAAA;AAAA;AAAA,EAIO,WAAW;AAAA,EACX,aAAa;AAAA,EACb,YAAsC;AAAA,EAEtC,iBAAqC,CAAA;AAAA,EAC5C;AAAA,EAWA,OAAO;AACL,QAAI,CAAC,KAAK,iBAAiB,CAAC,KAAK,eAAe;AAC9C,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AAEA,SAAK,GAAG,iBAAiB,UAAU,OAAO,MAAM;AAC9C,WAAK,YAAY,EAAE;AAEnB,UAAI,CAAC,KAAK,YAAY;AACpB,UAAE,gBAAA;AACF,UAAE,eAAA;AACF,UAAE,yBAAA;AAEF,YAAI;AACF,gBAAM,KAAK,KAAA;AAAA,QACb,SAASA,IAAG;AACV,kBAAQ,KAAKA,EAAC;AAAA,QAChB;AAEA,YAAI,CAAC,KAAK,UAAU;AAClB,eAAK,iBAAA;AAAA,QACP;AAEA,aAAK,aAAa;AAElB,aAAK,GAAG,cAAA;AAER;AAAA,MACF;AAAA,IACF,CAAC;AAED,SAAK,GAAG,iBAAiB,WAAW,MAAM;AACxC,WAAK,QAAA;AAAA,IACP,GAAG,IAAI;AAAA,EACT;AAAA,EAEA,UAAU;AACR,QAAI,KAAK,WAAW;AAClB,WAAK,UAAU,WAAW;AAAA,IAC5B;AAEA,SAAK,aAAa;AAClB,SAAK,WAAW;AAChB,SAAK,eAAe,SAAS,EAAE,QAAQ;AAEvC,eAAW,iBAAiB,KAAK,gBAAgB;AAC/C,oBAAc,WAAW;AAAA,IAC3B;AAAA,EACF;AAAA,EAEA,MAAM,OAAO;AACX,QAAI,CAAC,KAAK,eAAe,SAAS,CAAC,KAAK,eAAe,OAAO;AAC5D;AAAA,IACF;AAEA,QAAI,KAAK,WAAW;AAClB,WAAK,UAAU,WAAW;AAAA,IAC5B;AAEA,UAAM,WAAW,KAAK,cAAc;AACpC,UAAM,WAAW,KAAK,cAAc;AAEpC,UAAM,SAAS,KAAK,aAAA;AACpB,UAAM,EAAE,KAAK,KAAA,IAAS,MAAM,cAAA;AAG5B,UAAM,MAAM,MAAM;AAAA,MAChB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,UACJ;AAAA,QAAA;AAAA,MACF;AAAA,IACF;AAGF,UAAM,IAAI,IAAI,KAAK;AAEnB,QAAI,KAAK,MAAM;AACb;AAAA,IACF;AAEA,SAAK,WAAW,CAAC,CAAC,EAAE;AACpB,SAAK,eAAe,eAAe,EAAE,QAAQ,KAAK,WAAW,MAAM;AAEnE,QAAI,KAAK,UAAU;AACjB;AAAA,IACF;AAEA,QAAI,EAAE,MAAM,EAAA,IAAM;AAGlB,WAAO,YAAY,IAAI;AACvB,QAAI,YAAY,CAAC;AAGjB,UAAM,IAAI,MAAM,OAAO,qBAAA;AACvB,UAAM,IAAI,MAAM,OAAO,eAAe,CAAC;AACvC,UAAM,IAAI,MAAM,OAAO,qBAAqB,MAAM,UAAU,QAAQ;AAGpE,UAAM,IAAI,MAAM,OAAO,qBAAqB,GAAG,CAAC;AAChD,UAAM,IAAI,MAAM,OAAO,wBAAwB,GAAG,GAAG,GAAG,CAAC;AACzD,UAAM,IAAI,MAAM,OAAO,KAAK,CAAC;AAC7B,UAAM,KAAK,MAAM,OAAO,2BAA2B,UAAU,MAAM,GAAG,GAAG,CAAC;AAE1E,UAAM,OAAO,MAAM;AAAA,MACjB;AAAA,MACA;AAAA,QACE;AAAA,QACA,GAAG,EAAE,SAAS,EAAE;AAAA,QAChB,IAAI,GAAG,SAAS,EAAE;AAAA,MAAA;AAAA,IACpB;AAGF,UAAM,EAAE,MAAA,IAAU,KAAK,KAAK;AAE5B,UAAM,KAAK,MAAM,OAAO,2BAA2B,GAAG,IAAI,CAAC;AAE3D,QAAI,OAAO,YAAY,KAAK,GAAG;AAE7B;AAAA,IACF;AAEA,SAAK,eAAe,SAAS,EAAE,QAAQ,GAAG,SAAS,EAAE;AAAA,EACvD;AAAA,EAEA,oBAAoB;AAClB,WAAO;AAAA,MACL,KAAK;AAAA,MACL,GAAG,KAAK,GAAG,iBAAmC,qBAAqB;AAAA,IAAA;AAAA,EAEvE;AAAA,EAEA,mBAAmB;AACjB,SAAK,iBAAiB,CAAA;AAEtB,eAAW,SAAS,KAAK,qBAAqB;AAC5C,UAAI,SAAS,MAAM,SAAS,CAAC,MAAM,UAAU;AAC3C,cAAM,WAAW;AAEjB,aAAK,eAAe,KAAK,KAAK;AAE9B,mBAAW,MAAM;AACf,gBAAM,WAAW;AAAA,QACnB,GAAG,GAAI;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA,EAEA,eAA+C;AAC7C,UAAM,SAAS,UAAU;AAAA,MACvB,KAAK,QAAQ;AAAA,MACb,KAAK,QAAQ;AAAA,MACb,KAAK,QAAQ;AAAA,IAAA;AAGf,WAAO,QAAQ,KAAK,QAAQ,IAAI;AAChC,WAAO,UAAU,KAAK,QAAQ,MAAM;AAEpC,WAAO;AAAA,EACT;AAAA,EAEA,eAAe,MAAc;AAC3B,WAAO,KAAK,GAAG,cAAgC,UAAU,IAAI,IAAI,KAC5D,KAAK,kBAAkB,IAAI;AAAA,EAClC;AAAA,EAEA,kBAAkB,MAAc;AAC9B,UAAM,QAAQ,SAAS,cAAc,OAAO;AAE5C,UAAM,OAAO;AACb,UAAM,OAAO;AAEb,SAAK,GAAG,YAAY,KAAK;AAEzB,WAAO;AAAA,EACT;AACF;AAEA,SAAS,YAAY,KAAa;AAChC,SAAO,OAAO,KAAK,GAAG,EAAE;AAC1B;AAEA,gBAAgB,oBAAoB;AAAA,EAClC,QAAQ,IAAI,EAAE,SAAS;AACrB,UAAM,UAAU,KAAK,MAAM,KAAK;AAChC;AAAA,MACE;AAAA,MACA;AAAA,MACA,CAACC,QAAO,IAAI,gBAAgBA,KAAuB,OAAO;AAAA,IAAA;AAAA,EAE9D;AACF,CAAC;AAED,gBAAgB,aAAa;AAAA,EAC3B,QAAQ,IAAI,EAAE,SAAS;AACrB,UAAM,UAAU,KAAK,MAAM,KAAK;AAChC;AAAA,MACE;AAAA,MACA;AAAA,MACA,CAACA,QAAO,IAAI,SAASA,KAAuB,OAAO;AAAA,IAAA;AAAA,EAEvD;AACF,CAAC;"}