{"version":3,"file":"tinymce.js","sources":["../../../../../windwalker/unicorn/assets/src/utilities/arr.ts","../../../../../../node_modules/@lyrasoft/ts-toolkit/src/generic/alert-adapter.ts","../../../../../../node_modules/@lyrasoft/ts-toolkit/src/generic/stack.ts","../../../../../windwalker/unicorn/assets/src/service/loader.ts","../../../../../windwalker/unicorn/assets/src/composable/useHttp.ts","../../../../../windwalker/unicorn/assets/src/composable/useStack.ts","../../../../../windwalker/unicorn/assets/src/module/tinymce.ts"],"sourcesContent":["\nexport function isPlainObject(val: any): val is Record<string, any> {\n  return val && typeof val === \"object\" && !Array.isArray(val);\n}\n\nexport function mergeDeep<T = Record<string, any>>(target: Partial<T>, ...sources: any[]): T {\n  let out: any = isPlainObject(target) ? { ...target } : target;\n\n  for (const source of sources) {\n    if (Array.isArray(source)) {\n      out = (Array.isArray(out) ? out.concat(source) : source) as T;\n      continue;\n    }\n    if (isPlainObject(source)) {\n      out = { ...(isPlainObject(out) ? out : {}) };\n      for (const key of Object.keys(source)) {\n        out[key] =\n          key in out ? mergeDeep(out[key], source[key]) : source[key];\n      }\n      continue;\n    }\n    out = source as T;\n  }\n  return out;\n}\n","export type AlertHandler = (title: string, text?: string, icon?: string, extra?: any) => Promise<void>;\nexport type ConfirmHandler = (title: string, text?: string, icon?: string, extra?: any) => Promise<boolean>;\nexport type NotifyHandler = (title: string, text?: string, type?: string, extra?: any) => Promise<() => any>;\nexport type ClearNotifiesHandler = () => Promise<void>;\n\nexport class AlertAdapter {\n  static alert: AlertHandler = async (title: string, text?: string) => {\n    if (text) {\n      title += ' | ' + text;\n    }\n\n    return window.alert(title);\n  };\n  static confirm: ConfirmHandler = async (title: string, text?: string) => {\n    return new Promise<boolean>((resolve) => {\n      if (text) {\n        title += ' | ' + text;\n      }\n\n      const v = confirm(title);\n\n      resolve(v);\n    });\n  };\n  static deleteConfirm: ConfirmHandler = async (title: string, text?: string) => this.confirm(title, text);\n\n  static notify: NotifyHandler = async (title: string, text?: string, type: string = 'log') => {\n    if (text) {\n      title += ' | ' + text;\n    }\n\n    if (type === 'error') {\n      console.error(title);\n    } else if (type === 'warn') {\n      console.warn(title);\n    } else {\n      console.log(title);\n    }\n\n    return async () => {\n      // Noop\n    };\n  }\n\n  static clearNotifies: ClearNotifiesHandler = async () => {\n    // Noop\n  }\n\n  static confirmText: () => string = () => 'OK';\n  static cancelText: () => string = () => 'Cancel';\n  static deleteText: () => string = () => 'Delete';\n}\n\n","declare type StackHandler<T> = (stack: Stack<T>, length: number) => void;\n\ndeclare type StackValue<V> = V | true;\n\nexport class Stack<T = any> {\n  observers: { handler: StackHandler<T>, once: boolean }[] = [];\n\n  constructor(protected store: StackValue<T>[] = []) {\n    //\n  }\n\n  push(value?: T): number {\n    const r = this.store.push(value ?? true);\n\n    this.notice();\n\n    return r;\n  }\n\n  pop(): T | true | undefined {\n    const r = this.store.pop();\n\n    this.notice();\n\n    return r;\n  }\n\n  clear(): this {\n    this.store = [];\n\n    this.notice();\n\n    return this;\n  }\n\n  isEmpty(): boolean {\n    return this.store.length === 0;\n  }\n\n  get length() {\n    return this.store.length;\n  }\n\n  peek(): StackValue<T>[] {\n    return this.store;\n  }\n\n  observe(handler: (stack: Stack, length: number) => void): () => void {\n    this.observers.push({\n      handler,\n      once: false\n    });\n\n    return () => {\n      this.off(handler);\n    };\n  }\n\n  once(handler: StackHandler<T>): () => void {\n    this.observers.push({\n      handler,\n      once: true\n    });\n\n    return () => {\n      this.off(handler);\n    };\n  }\n\n  notice(): this {\n    this.observers.forEach((observer) => {\n      observer.handler(this, this.length);\n    });\n\n    this.observers = this.observers.filter((observer) => observer.once !== true);\n\n    return this;\n  }\n\n  off(callback?: StackHandler<T>): this {\n    this.observers = this.observers.filter((observer) => observer.handler !== callback);\n    return this;\n  }\n}\n\nexport function stack<T = any>(store: any[] = []) {\n  return new Stack<T>(store);\n}\n","import { Dictionary } from '../types';\nimport { injectCssToDocument } from './';\n\nexport function useScriptImport(src: string, attrs: Record<string, string> = {}): Promise<void> {\n  const script = document.createElement('script');\n  script.src = resolveUrl(src);\n\n  for (const key in attrs) {\n    script.setAttribute(key, attrs[key]);\n  }\n\n  return new Promise((resolve, reject) => {\n    script.onload = () => {\n      resolve();\n      document.body.removeChild(script);\n    };\n    script.onerror = (e) => {\n      reject(e);\n      document.body.removeChild(script);\n    };\n\n    document.body.appendChild(script);\n  });\n}\n\nexport function doImport<T = any>(src: string): Promise<T> {\n  return import(/* @vite-ignore */src);\n}\n\nexport async function useImport(...src: any[]): Promise<any>;\nexport async function useImport<T extends any[]>(...src: string[]): Promise<T>;\nexport async function useImport<T = any>(src: string): Promise<{ default: T }>;\nexport async function useImport<D = any, C = any>(src: string): Promise<{ default: D } & Dictionary<C>>;\nexport async function useImport(...src: any[]): Promise<any> {\n  if (src.length === 1) {\n    return doImport(src[0]);\n  }\n\n  const promises: Promise<any>[] = [];\n\n  src.forEach((link) => {\n    promises.push(\n      link instanceof Promise ? link : doImport(link)\n    );\n  });\n\n  return Promise.all(promises);\n}\n\nexport async function useSeriesImport(...src: any[]): Promise<any>;\nexport async function useSeriesImport<T extends any[]>(...src: string[]): Promise<T>;\nexport async function useSeriesImport<T = any>(src: string): Promise<{ default: T }>;\nexport async function useSeriesImport<D = any, C = any>(src: string): Promise<{ default: D } & Dictionary<C>>;\nexport async function useSeriesImport(...src: any[]): Promise<any> {\n  const modules: any[] = [];\n\n  for (const source of src) {\n    if (Array.isArray(source)) {\n      const m = await useImport(...source);\n      modules.push(m);\n\n      continue;\n    }\n\n    const m = await useImport(source);\n\n    modules.push(m);\n  }\n\n  return modules;\n}\n\nexport async function useCssIncludes(...hrefs: string[]): Promise<void[]> {\n  const promises = hrefs.map((href) => {\n    href = resolveUrl(href);\n\n    return new Promise<void>((resolve, reject) => {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = () => resolve();\n      link.onerror = (e) => reject(e);\n\n      document.head.appendChild(link);\n    });\n  });\n\n  return Promise.all(promises);\n}\n\nconst importedSheets: Record<string, Promise<{ default: CSSStyleSheet }>> = {};\n\nexport async function useCssImport(...hrefs: string[]): Promise<CSSStyleSheet[]> {\n  // Todo: Use `{ assert: { type: \"css\" }` after all browsers support it.\n  const modules = await Promise.all(\n    hrefs.map((href) => {\n      if (!importedSheets[href]) {\n        importedSheets[href] = simulateCssImport(href);\n      }\n\n      return importedSheets[href];\n    })\n  );\n  const styles = modules.map(module => module.default);\n\n  return injectCssToDocument(...styles);\n}\n\nasync function simulateCssImport(href: string) {\n  href = resolveUrl(href);\n\n  const response = await fetch(href);\n  if (!response.ok) {\n    throw new Error(`Failed to load CSS: ${href}`);\n  }\n  const cssText = await response.text();\n\n  const sheet = new CSSStyleSheet();\n  await sheet.replace(cssText);\n  return { default: sheet };\n}\n\nlet importMap: Record<string, string>;\n\nfunction parseImportMap() {\n  const importMapScript = document.querySelector('script[type=\"importmap\"]');\n  if (importMapScript) {\n    try {\n      return JSON.parse(importMapScript.textContent || '{}').imports || {};\n    } catch (e) {\n      console.error('Failed to parse import map:', e);\n    }\n  }\n  return {};\n}\n\nfunction resolveUrl(specifier: string) {\n  importMap ??= parseImportMap();\n\n  for (const [prefix, target] of Object.entries(importMap)) {\n    if (specifier === prefix) {\n      return target;\n    }\n  }\n\n  for (const [prefix, target] of Object.entries(importMap)) {\n    if (specifier.startsWith(prefix)) {\n      return specifier.replace(prefix, target);\n    }\n  }\n  return specifier;\n}\n","import type { UnicornHttpClient } from '../module/http-client';\nimport type { AxiosInstance, CreateAxiosDefaults } from 'axios';\n\nexport type { ApiReturn, UnicornHttpClient } from '../module/http-client';\n\nexport async function useHttpClient(config?: CreateAxiosDefaults | AxiosInstance): Promise<UnicornHttpClient> {\n  const { createHttpClient } = await import('../module/http-client');\n\n  return createHttpClient(config as CreateAxiosDefaults | undefined);\n}\n","\nimport { Dictionary } from '../types';\nimport { Stack, stack } from '@lyrasoft/ts-toolkit/generic';\n\nconst stacks: Dictionary<Stack> = {};\n\nexport function useStack<T = any>(name: string = 'default', store: any[] = []): Stack<T> {\n  return stacks[name] ??= createStack<T>(store);\n}\n\nexport function createStack<T = any>(store: any[] = []): Stack<T> {\n  return stack<T>(store);\n}\n","import type { Editor, EditorOptions, TinyMCE } from 'tinymce';\nimport { useHttpClient, useStack } from '../composable';\nimport { useImport, useScriptImport } from '../service';\nimport { Dictionary, MaybePromise } from '../types';\nimport { mergeDeep } from '../utilities';\n\nconst instances: Dictionary<TinymceController> = {};\nlet hooks: ((tinymce: TinyMCE) => MaybePromise<any>)[] = [];\n\nlet imported = false;\n\ndeclare type UploadHandlerParams = Parameters<NonNullable<EditorOptions['images_upload_handler']>>;\n\nexport async function get(\n  selector: string,\n  options: Record<string, any> = {}\n): Promise<TinymceController> {\n  return instances[selector] ??= await create(document.querySelector<HTMLElement>(selector)!, options);\n}\n\nexport async function create(\n  selector: string | HTMLElement,\n  options: Record<string, any> = {}\n): Promise<TinymceController> {\n  const tinymce = await loadTinymce();\n  let el: HTMLElement;\n\n  if (typeof selector === 'string') {\n    el = document.querySelector<HTMLElement>(selector)!;\n  } else {\n    el = selector;\n  }\n\n  return new TinymceController(tinymce, el, options);\n}\n\nexport function destroy(selector: string): void {\n  delete instances[selector];\n}\n\nexport function addHook(handler: ((tinymce: TinyMCE) => MaybePromise<any>)) {\n  hooks.push(handler);\n}\n\nexport function clearHooks() {\n  hooks = [];\n}\n\nasync function loadTinymce(): Promise<TinyMCE> {\n  if (imported) {\n    return tinymce;\n  }\n\n  await useScriptImport('@tinymce');\n\n  for (const hook of hooks) {\n    hook(tinymce);\n  }\n  await registerDragPlugin(tinymce);\n  imported = true;\n  return tinymce;\n}\n\nconst defaultOptions: Record<string, any> = {};\n\nexport class TinymceController {\n  editor?: Editor;\n  options: Record<string, any> = {};\n\n  constructor(protected tinymce: TinyMCE, public element: HTMLElement, options: Record<string, any>) {\n    options.target = element;\n\n    this.options = mergeDeep(\n      {\n        unicorn: {\n          stack_name: 'uploading'\n        }\n      },\n      defaultOptions,\n      this.prepareOptions(options, tinymce.majorVersion),\n    );\n\n    tinymce.EditorManager.init(this.options).then((editor) => {\n      this.editor = editor[0];\n    });\n  }\n\n  prepareOptions(options: Record<string, any>, version = '6') {\n    const defaults: Partial<EditorOptions> = {};\n\n    if (options.images_upload_url) {\n      defaults.paste_data_images = true;\n      defaults.remove_script_host = false;\n      defaults.relative_urls = false;\n\n      if (Number(version) >= 6) {\n        defaults.images_upload_handler = (blobInfo, progress) =>\n          this.imageUploadHandler(blobInfo, progress);\n      } else {\n        options.plugins.push('paste');\n\n        // @ts-ignore\n        defaults.images_upload_handler = (blobInfo, success, failure, progress) =>\n          this.imageUploadHandler(blobInfo, progress)\n            .then((url) => {\n              success(url);\n              return url;\n            })\n            .catch((e) => {\n              failure(e.message, { remove: true });\n              throw e;\n            });\n      }\n    }\n\n    // defaults.file_picker_callback = (...args) => this.filePickerCallback(...args);\n\n    defaults.plugins = defaults.plugins || [];\n\n    defaults.setup = (editor) => {\n      editor.on('change', () => {\n        this.tinymce.triggerSave();\n      });\n    };\n\n    options = mergeDeep({}, defaults, options);\n\n    if (options.plugins.indexOf('unicorndragdrop') === -1) {\n      options.plugins.push('unicorndragdrop');\n    }\n\n    return options;\n  }\n\n  insert(text: string) {\n    this.editor?.insertContent(text);\n  }\n\n  getValue(): string {\n    return this.editor?.getContent() ?? '';\n  }\n\n  setValue(text: string): void {\n    this.editor?.setContent(text);\n  }\n\n  // filePickerCallback(callback, value, meta) {\n  //   const input = document.createElement('input');\n  //   input.setAttribute('type', 'file');\n  //   input.style.display = 'none';\n  //\n  //   if (meta.filetype === 'image') {\n  //     input.setAttribute('accept', `image/\\*`);\n  //   }\n  //\n  //   document.body.appendChild(input);\n  //\n  //   input.onchange = function () {\n  //     const file = this.files[0];\n  //\n  //     const reader = new FileReader();\n  //     reader.onload = function () {\n  //       const id = 'blobid' + (new Date()).getTime();\n  //       const blobCache =  tinymce.activeEditor.editorUpload.blobCache;\n  //       const base64 = reader.result.split(',')[1];\n  //       const blobInfo = blobCache.create(id, file, base64);\n  //       blobCache.add(blobInfo);\n  //\n  //       /* call the callback and populate the Title field with the file name */\n  //       callback(blobInfo.blobUri(), { title: file.name, text: file.name });\n  //     };\n  //     reader.readAsDataURL(file);\n  //     input.remove();\n  //   };\n  //\n  //   input.click();\n  // }\n\n  async imageUploadHandler(blobInfo: UploadHandlerParams[0], progress: UploadHandlerParams[1]) {\n    const element = this.element;\n\n    element.dispatchEvent(new CustomEvent('upload-start'));\n\n    const formData = new FormData();\n    formData.append('file', blobInfo.blob(), blobInfo.filename());\n\n    const stack = useStack(this.options.unicorn.stack_name);\n    stack.push(true);\n\n    const { post, isAxiosError } = await useHttpClient();\n\n    try {\n      let res = await post(\n        this.options.images_upload_url,\n        formData,\n        {\n          withCredentials: false,\n          onUploadProgress: (e) => {\n            progress(e.loaded / e.total! * 100);\n          }\n        }\n      );\n      element.dispatchEvent(new CustomEvent('upload-success'));\n\n      return res.data.data.url;\n    } catch (err) {\n      if (isAxiosError(err)) {\n        const message = err?.response?.data?.message || err.message;\n        console.error(err?.response?.data?.message || err.message, err);\n        element.dispatchEvent(new CustomEvent('upload-error', { detail: err }));\n\n        return Promise.reject({ message, remove: true });\n      }\n\n      throw err;\n    } finally {\n      element.dispatchEvent(new CustomEvent('upload-complete'));\n      stack.pop();\n    }\n  }\n}\n\nfunction registerDragPlugin(tinymce: TinyMCE) {\n  tinymce.PluginManager.add('unicorndragdrop', function (editor) {\n    // Reset the drop area border\n    tinymce.DOM.bind(document, 'dragleave', function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (tinymce.activeEditor) {\n        tinymce.activeEditor.contentAreaContainer.style.transition = 'all .3s';\n        tinymce.activeEditor.contentAreaContainer.style.borderWidth = '';\n      }\n\n      return false;\n    });\n\n    if (typeof FormData !== 'undefined') {\n\n      // Fix for Chrome\n      editor.on('dragenter', e => {\n        e.stopPropagation();\n        return false;\n      });\n\n      // Notify user when file is over the drop area\n      editor.on('dragover', e => {\n        e.preventDefault();\n\n        if (tinymce.activeEditor) {\n          tinymce.activeEditor.contentAreaContainer.style.transition = 'all .3s';\n          tinymce.activeEditor.contentAreaContainer.style.border = '3px dashed rgba(0, 0, 0, .35)';\n        }\n\n        return false;\n      });\n\n      editor.on('drop', e => {\n        editor.contentAreaContainer.style.borderWidth = '';\n        editor.contentAreaContainer.style.borderWidth = '';\n      });\n    }\n  });\n\n  return Promise.resolve();\n}\n\nexport interface TinymceModule {\n  get: typeof get;\n  create: typeof create;\n  destroy: typeof destroy;\n  addHook: typeof addHook;\n  clearHooks: typeof clearHooks;\n  TinymceController: typeof TinymceController;\n}\n\ndeclare global {\n  var tinymce: TinyMCE;\n}\n"],"names":["tinymce","stack"],"mappings":"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","x_google_ignoreList":[1,2]}