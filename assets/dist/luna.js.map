{"version":3,"file":"luna.js","sources":["../src/composables/useAccountCheck.ts","../src/composables/useCaptcha.ts","../src/composables/useLangDropdown.ts","../src/composables/useLocaleSwitch.ts","../src/composables/useSrp.ts","../src/composables/usePageBuilder.ts","../src/luna.ts"],"sourcesContent":["import { __, addGlobalValidator, ApiReturn, route, useHttpClient } from '@windwalker-io/unicorn-next';\n\nexport async function useAccountCheck() {\n  const { get } = await useHttpClient();\n\n  await addGlobalValidator('account_check', async (account: any, input: any, options: any) => {\n    const field = options.field || 'username';\n\n    const res = await get<ApiReturn<{ exists: boolean; message: string; }>>(\n      '@account_check',\n      { params: { field: field, value: account } }\n    );\n\n    if (res.data.data.exists) {\n      return res.data.data.message || __('luna.message.user.account.exists');\n    }\n\n    return '';\n  });\n}\n\n","export function useCaptcha() {\n  return import('../modules/captcha');\n}\n","import { prepareAlpine, useHttpClient } from '@windwalker-io/unicorn-next';\nimport { Dropdown } from 'bootstrap';\n\nexport async function useLangDropdown() {\n  await prepareAlpine(async (Alpine) => {\n    Alpine.data('LangDropdown', (options: any) => ({\n      options,\n      dropdown: null,\n      items: [],\n      loaded: false,\n\n      init() {\n        this.dropdown = Dropdown.getOrCreateInstance(\n          // @ts-ignore\n          this.$el,\n          {\n            autoClose: true\n          }\n        ) as any;\n      },\n      async buttonClicked(e: Event): Promise<any> {\n        if (this.loaded) {\n          return;\n        }\n\n        const options = this.options as any;\n\n        const { get } = await useHttpClient();\n\n        let res = await get(\n          options.ajaxUrl,\n          {\n            params: {\n              id: options.id,\n              type: options.type,\n              table: options.table,\n              idName: options.idName,\n              langField: options.langField,\n              routeName: options.routeName,\n            }\n          }\n        );\n\n        this.items = res.data.data;\n\n        this.loaded = true;\n      }\n    }));\n  });\n\n  // selectAll('[data-langdropdown]', (el) => {\n  //   el.removeAttribute('x-ignore');\n  // });\n  //\n  // initAlpineComponent('data-langdropdown');\n\n  // document.addEventListener('alpine:init', async () => {\n  //\n  // });\n}\n\n","export function useLocaleSwitch() {\n  return import('../modules/locale-switch');\n}\n","export function useSrp() {\n  return import('../modules/srp');\n}\n","export async function usePageBuilder(rootContainer: string | Element = 'page-builder-app') {\n  import('../modules/page-builder');\n}\n","import { UnicornApp, useMacro, useUnicorn } from '@windwalker-io/unicorn-next';\nimport { useAccountCheck, useCaptcha, useLangDropdown, useLocaleSwitch } from '~luna/composables';\n\nexport * from './composables/useAccountCheck';\nexport * from './composables/useCaptcha';\nexport * from './composables/useLangDropdown';\nexport * from './composables/useLocaleSwitch';\nexport * from './composables/useSrp';\nexport * from './composables/usePageBuilder';\n\nexport function createLuna() {\n  return {\n    install(app: UnicornApp) {\n      const $luna = {\n        useAccountCheck,\n        useCaptcha,\n        useLangDropdown,\n        useLocaleSwitch,\n      };\n\n      useMacro('$luna', $luna);\n    }\n  }\n}\n\nexport function useLuna() {\n  const u = useUnicorn();\n\n  u.use(createLuna());\n}\n\ndeclare module '@windwalker-io/unicorn-next' {\n  interface UnicornApp {\n    $luna: {\n      useAccountCheck: typeof useAccountCheck;\n      useCaptcha: typeof useCaptcha;\n      useLangDropdown: typeof useLangDropdown;\n      useLocaleSwitch: typeof useLocaleSwitch;\n    }\n  }\n}\n"],"names":["options"],"mappings":";;;AAEA,eAAsB,kBAAkB;AACtC,QAAM,EAAE,QAAQ,MAAM,cAAA;AAEtB,QAAM,mBAAmB,iBAAiB,OAAO,SAAc,OAAY,YAAiB;AAC1F,UAAM,QAAQ,QAAQ,SAAS;AAE/B,UAAM,MAAM,MAAM;AAAA,MAChB;AAAA,MACA,EAAE,QAAQ,EAAE,OAAc,OAAO,UAAQ;AAAA,IAAE;AAG7C,QAAI,IAAI,KAAK,KAAK,QAAQ;AACxB,aAAO,IAAI,KAAK,KAAK,WAAW,GAAG,kCAAkC;AAAA,IACvE;AAEA,WAAO;AAAA,EACT,CAAC;AACH;ACnBO,SAAS,aAAa;AAC3B,SAAO,OAAO,qBAAoB;AACpC;ACCA,eAAsB,kBAAkB;AACtC,QAAM,cAAc,OAAO,WAAW;AACpC,WAAO,KAAK,gBAAgB,CAAC,aAAkB;AAAA,MAC7C;AAAA,MACA,UAAU;AAAA,MACV,OAAO,CAAA;AAAA,MACP,QAAQ;AAAA,MAER,OAAO;AACL,aAAK,WAAW,SAAS;AAAA;AAAA,UAEvB,KAAK;AAAA,UACL;AAAA,YACE,WAAW;AAAA,UAAA;AAAA,QACb;AAAA,MAEJ;AAAA,MACA,MAAM,cAAc,GAAwB;AAC1C,YAAI,KAAK,QAAQ;AACf;AAAA,QACF;AAEA,cAAMA,WAAU,KAAK;AAErB,cAAM,EAAE,QAAQ,MAAM,cAAA;AAEtB,YAAI,MAAM,MAAM;AAAA,UACdA,SAAQ;AAAA,UACR;AAAA,YACE,QAAQ;AAAA,cACN,IAAIA,SAAQ;AAAA,cACZ,MAAMA,SAAQ;AAAA,cACd,OAAOA,SAAQ;AAAA,cACf,QAAQA,SAAQ;AAAA,cAChB,WAAWA,SAAQ;AAAA,cACnB,WAAWA,SAAQ;AAAA,YAAA;AAAA,UACrB;AAAA,QACF;AAGF,aAAK,QAAQ,IAAI,KAAK;AAEtB,aAAK,SAAS;AAAA,MAChB;AAAA,IAAA,EACA;AAAA,EACJ,CAAC;AAWH;AC3DO,SAAS,kBAAkB;AAChC,SAAO,OAAO,2BAA0B;AAC1C;ACFO,SAAS,SAAS;AACvB,SAAO,OAAO,iBAAgB;AAChC;ACFA,eAAsB,eAAe,gBAAkC,oBAAoB;AACzF,SAAO,0BAAyB,EAAA,KAAA,OAAA,EAAA,CAAA;AAClC;ACQO,SAAS,aAAa;AAC3B,SAAO;AAAA,IACL,QAAQ,KAAiB;AACvB,YAAM,QAAQ;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAGF,eAAS,SAAS,KAAK;AAAA,IACzB;AAAA,EAAA;AAEJ;AAEO,SAAS,UAAU;AACxB,QAAM,IAAI,WAAA;AAEV,IAAE,IAAI,YAAY;AACpB;"}